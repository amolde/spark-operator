# apiVersion: radanalytics.io/v1
# kind: SparkApplication
# metadata:
#   name: my-spark-app
# spec:
#   image: quay.io/radanalyticsio/openshift-spark:2.4.5-2
#   mainApplicationFile: local:///opt/spark/examples/jars/spark-examples_2.11-2.4.5.jar
#   mainClass: org.apache.spark.examples.SparkPi
#   sleep: 300 # repeat each 5 minutes
#   driver:
#     cores: 0.2
#     coreLimit: 200m
#   executor:
#     instances: 2
#     cores: 1
#     coreLimit: 400m
#   labels:
#     foo: bar
# ---
---
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: banner-to-s3
spec:
  sparkConf:
    spark.sql.files.maxRecordsPerFile: "100000000"
  hadoopConf:
    "fs.s3a.aws.credentials.provider": "org.apache.hadoop.fs.s3a.AssumedRoleCredentialProvider"
    "fs.s3a.assumed.role.arn": "arn:aws:iam::209299999084:role/ep-test-compute-node-role"
  image: docker-registry.default.svc:5000/spark-operator/spark-applications:latest
  type: Python
  pythonVersion: "3"
  mode: cluster
  imagePullPolicy: Always
  mainApplicationFile: s3a://nu-data-lake-test/spark-applications/banner.s3.test.py
  sparkVersion: "2.4.5"
  driver:
    envSecretKeyRefs:
      BANNER_USERNAME:
        name: banner-deva8-db
        key: username
      BANNER_PASSWORD:
        name: banner-deva8-db
        key: password
      BANNER_HOST:
        name: banner-deva8-db
        key: host
      BANNER_PORT:
        name: banner-deva8-db
        key: port
    serviceAccount: spark
    env:
      - name: BANNER_DATABASE
        value: DEVA8
      - name: BANNER_QUERY
        value: SELECT spriden_id, shrlgpa_gpa FROM shrlgpa, spriden WHERE shrlgpa_pidm = spriden_pidm AND spriden_change_ind IS NULL AND shrlgpa_gpa_type_ind = 'O'
      - name: S3_FOLDER_NAME
        value: nu-data-lake-test/banner/graduation
    # cores: 1
    # coreLimit: 200m
  executor:
    envSecretKeyRefs:
      BANNER_USERNAME:
        name: banner-deva8-db
        key: username
      BANNER_PASSWORD:
        name: banner-deva8-db
        key: password
      BANNER_HOST:
        name: banner-deva8-db
        key: host
      BANNER_PORT:
        name: banner-deva8-db
        key: port
    env:
      - name: BANNER_DATABASE
        value: DEVA8
      - name: BANNER_QUERY
        value: SELECT spriden_id, shrlgpa_gpa FROM shrlgpa, spriden WHERE shrlgpa_pidm = spriden_pidm AND spriden_change_ind IS NULL AND shrlgpa_gpa_type_ind = 'O'
      - name: S3_FOLDER_NAME
        value: nu-data-lake-test/banner/graduation
    instances: 1
    # cores: 1
    # coreLimit: 400m
  labels:
    foo: bar
---
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: my-example
spec:
  sparkConf:
    spark.sql.files.maxRecordsPerFile: "100000"
  hadoopConf:
    "fs.s3a.aws.credentials.provider": "org.apache.hadoop.fs.s3a.AssumedRoleCredentialProvider"
    "fs.s3a.assumed.role.arn": "arn:aws:iam::209299999084:role/ep-test-compute-node-role"
  image: docker-registry.default.svc:5000/spark-operator/spark-applications:latest
  # image: quay.io/radanalyticsio/openshift-spark:2.4.5-2
  # image: "gcr.io/spark-operator/spark-py:v2.4.5"
  type: Python
  pythonVersion: "3"
  mode: cluster
  imagePullPolicy: Always
  # mainApplicationFile: local:///opt/spark/examples/src/main/python/pi.py
  mainApplicationFile: s3a://nu-data-lake-test/spark-applications/admitware.s3.test.py
  sparkVersion: "2.4.5"
  driver:
    envSecretKeyRefs:
      ADMITWARE_USERNAME:
        name: admitware-test-db
        key: username
      ADMITWARE_PASSWORD:
        name: admitware-test-db
        key: password
      ADMITWARE_HOST:
        name: admitware-test-db
        key: host
      ADMITWARE_PORT:
        name: admitware-test-db
        key: port
    serviceAccount: spark
    env:
      - name: ADMITWARE_DATABASE
        value: Admissions
      - name: ADMITWARE_TABLE
        value: ACAdmitLetter
      - name: S3_FOLDER_NAME
        value: nu-data-lake-test/admitware/admit-letters
    # cores: 1
    # coreLimit: 200m
  executor:
    envSecretKeyRefs:
      ADMITWARE_USERNAME:
        name: admitware-test-db
        key: username
      ADMITWARE_PASSWORD:
        name: admitware-test-db
        key: password
      ADMITWARE_HOST:
        name: admitware-test-db
        key: host
      ADMITWARE_PORT:
        name: admitware-test-db
        key: port
    env:
      - name: ADMITWARE_DATABASE
        value: Admissions
      - name: ADMITWARE_TABLE
        value: ACAdmitLetter
      - name: S3_FOLDER_NAME
        value: nu-data-lake-test/admitware/admit-letters
    instances: 1
    # cores: 1
    # coreLimit: 400m
  labels:
    foo: bar
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-role-binding
subjects:
- kind: ServiceAccount
  name: spark
roleRef:
  kind: Role
  name: spark-role
  apiGroup: rbac.authorization.k8s.io